(()=>{var e={"./node_modules/@supernovaio/export-helpers/build/helpers.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@supernovaio/export-helpers/build/helpers.js ***!
  \*******************************************************************/(e,t,o)=>{(()=>{"use strict";var e={639:(e,t,o)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.Iterators=void 0;const r=o(58);t.Iterators=class{static allTokenTypes(){return[r.TokenType.color,r.TokenType.typography,r.TokenType.dimension,r.TokenType.size,r.TokenType.space,r.TokenType.opacity,r.TokenType.fontSize,r.TokenType.lineHeight,r.TokenType.letterSpacing,r.TokenType.paragraphSpacing,r.TokenType.borderWidth,r.TokenType.radius,r.TokenType.duration,r.TokenType.zIndex,r.TokenType.shadow,r.TokenType.border,r.TokenType.gradient,r.TokenType.string,r.TokenType.productCopy,r.TokenType.fontFamily,r.TokenType.fontWeight,r.TokenType.textCase,r.TokenType.textDecoration,r.TokenType.visibility,r.TokenType.blur]}static allDimensionTokenTypes(){return[r.TokenType.dimension,r.TokenType.size,r.TokenType.space,r.TokenType.opacity,r.TokenType.fontSize,r.TokenType.lineHeight,r.TokenType.letterSpacing,r.TokenType.paragraphSpacing,r.TokenType.borderWidth,r.TokenType.radius,r.TokenType.duration,r.TokenType.zIndex]}static allStringTokenTypes(){return[r.TokenType.string,r.TokenType.productCopy,r.TokenType.fontFamily,r.TokenType.fontWeight]}static allOptionTokenTypes(){return[r.TokenType.textCase,r.TokenType.textDecoration,r.TokenType.visibility]}}},989:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.ColorFormat=void 0,(o=t.ColorFormat||(t.ColorFormat={})).rgb="rgb",o.rgba="rgba",o.smartRgba="smartRgba",o.hex6="hex6",o.hex8="hex8",o.hashHex6="hashHex6",o.hashHex8="hashHex8",o.smartHashHex="smartHashHex",o.smartHex="smartHex",o.hsl="hsl",o.hsla="hsla",o.smartHsla="smartHsla",o.smartUIColor="smartUIColor"},545:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.StringCase=void 0,(o=t.StringCase||(t.StringCase={})).camelCase="camelCase",o.capitalCase="capitalCase",o.constantCase="constantCase",o.dotCase="dotCase",o.headerCase="headerCase",o.noCase="noCase",o.paramCase="paramCase",o.pascalCase="pascalCase",o.pathCase="pathCase",o.sentenceCase="sentenceCase",o.snakeCase="snakeCase"},617:(e,t,o)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.FileHelper=void 0;const r=o(58);t.FileHelper=class{static createCopyRemoteFile({relativePath:e,fileName:t,url:o}){return{path:e,name:t,type:r.OutputFileType.copyRemoteUrl,url:o}}static createTextFile({relativePath:e,fileName:t,content:o}){return{path:e,name:t,type:r.OutputFileType.text,content:o}}static createBinaryFile({relativePath:e,fileName:t,data:o}){return{path:e,name:t,type:r.OutputFileType.binary,data:o}}}},761:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.sureOptionalReference=void 0,t.sureOptionalReference=function(e,t,o=!0){if(!e||!o)return null;const r=t.get(e);if(!r)throw new Error(`Trying to retrieve unknown referenced token ${e}`);return r}},118:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.NetworkHelper=void 0,t.NetworkHelper=class{static async fetchAsText(e,t,o){return(await this.performFetch(e,t,o)).text()}static async fetchAsJSON(e,t,o){return(await this.performFetch(e,t,o)).json()}static async fetchAsData(e,t,o){return(await this.performFetch(e,t,o)).arrayBuffer()}static async performFetch(e,t,o){try{const r=await e.network.fetch(t,o);if(!r.ok)throw new Error(`Request failed with status ${r.status}, error: ${await r.text()}`);return r}catch(e){throw e}}}},771:(e,t,o)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.CSSHelper=void 0;const r=o(58),n=o(761),a=o(952);t.CSSHelper=class{static tokenToCSS(e,t,o){switch(e.tokenType){case r.TokenType.color:return this.colorTokenValueToCSS(e.value,t,o);case r.TokenType.border:return this.borderTokenValueToCSS(e.value,t,o);case r.TokenType.gradient:return this.gradientTokenValueToCSS(e.value,t,o);case r.TokenType.dimension:case r.TokenType.size:case r.TokenType.space:case r.TokenType.opacity:case r.TokenType.fontSize:case r.TokenType.lineHeight:case r.TokenType.letterSpacing:case r.TokenType.paragraphSpacing:case r.TokenType.borderWidth:case r.TokenType.radius:case r.TokenType.duration:case r.TokenType.zIndex:return this.dimensionTokenValueToCSS(e.value,t,o);case r.TokenType.shadow:return this.shadowTokenValueToCSS(e.value,t,o);case r.TokenType.fontWeight:case r.TokenType.fontFamily:case r.TokenType.productCopy:case r.TokenType.string:return this.stringTokenValueToCSS(e.value,t,o);case r.TokenType.textCase:case r.TokenType.textDecoration:case r.TokenType.visibility:return this.optionTokenValueToCSS(e.value,t,o);case r.TokenType.blur:return this.blurTokenValueToCSS(e.value,t,o);case r.TokenType.typography:return this.typographyTokenValueToCSS(e.value,t,o);default:throw new r.UnreachableCaseError(e.tokenType,"Unsupported token type for transformation to CSS:")}}static colorTokenValueToCSS(e,t,o){return a.ColorHelper.formattedColorOrVariableName(e,t,o)}static borderTokenValueToCSS(e,t,o){const r=(0,n.sureOptionalReference)(e.referencedTokenId,t,o.allowReferences);if(r)return o.tokenToVariableRef(r);const a=this.dimensionTokenValueToCSS(e.width,t,o),i=this.borderStyleToCSS(e.style),s=this.colorTokenValueToCSS(e.color,t,o);return this.borderPositionToCSS(e.position),`${a} ${i} ${s}`}static gradientTokenValueToCSS(e,t,o){return e.map((e=>this.gradientLayerToCSS(e,t,o))).join(", ")}static gradientLayerToCSS(e,t,o){const i=(0,n.sureOptionalReference)(e.referencedTokenId,t,o.allowReferences);if(i)return o.tokenToVariableRef(i);let s="";switch(e.type){case r.GradientType.linear:s="linear-gradient(0deg, ";break;case r.GradientType.radial:s="radial-gradient(circle, ";break;case r.GradientType.angular:s="conic-gradient(";break;default:s="linear-gradient(0deg, "}return`${s}${e.stops.map((e=>`${this.colorTokenValueToCSS(e.color,t,o)} ${a.ColorHelper.roundToDecimals(100*e.position,o.decimals)}%`)).join(", ")})`}static dimensionTokenValueToCSS(e,t,o){const r=(0,n.sureOptionalReference)(e.referencedTokenId,t,o.allowReferences);return r?o.tokenToVariableRef(r):`${a.ColorHelper.roundToDecimals(e.measure,o.decimals)}${this.unitToCSS(e.unit)}`}static shadowTokenValueToCSS(e,t,o){return e.map((e=>this.shadowLayerToCSS(e,t,o))).join(", ")}static shadowLayerToCSS(e,t,o){const a=(0,n.sureOptionalReference)(e.referencedTokenId,t,o.allowReferences);return a?o.tokenToVariableRef(a):`${e.type===r.ShadowType.inner?"inset ":""}${e.x}px ${e.y}px ${e.radius}px ${e.spread}px ${this.colorTokenValueToCSS(e.color,t,o)}`}static stringTokenValueToCSS(e,t,o){const r=(0,n.sureOptionalReference)(e.referencedTokenId,t,o.allowReferences);return r?o.tokenToVariableRef(r):`"${e.text}"`}static optionTokenValueToCSS(e,t,o){const r=(0,n.sureOptionalReference)(e.referencedTokenId,t,o.allowReferences);return r?o.tokenToVariableRef(r):`"${e.value}"`}static blurTokenValueToCSS(e,t,o){const r=(0,n.sureOptionalReference)(e.referencedTokenId,t,o.allowReferences);return r?o.tokenToVariableRef(r):`blur(${this.dimensionTokenValueToCSS(e.radius,t,o)})`}static typographyTokenValueToCSS(e,t,o){const a=(0,n.sureOptionalReference)(e.referencedTokenId,t,o.allowReferences);if(a)return o.tokenToVariableRef(a);const i=(0,n.sureOptionalReference)(e.fontFamily.referencedTokenId,t,o.allowReferences),s=(0,n.sureOptionalReference)(e.fontWeight.referencedTokenId,t,o.allowReferences),l=(0,n.sureOptionalReference)(e.textDecoration.referencedTokenId,t,o.allowReferences),c=(0,n.sureOptionalReference)(e.textCase.referencedTokenId,t,o.allowReferences),u={fontFamily:i?o.tokenToVariableRef(i):e.fontFamily.text,fontWeight:s?o.tokenToVariableRef(s):e.fontWeight.text,textDecoration:l?o.tokenToVariableRef(l):e.textDecoration.value===r.TextDecoration.original?this.textDecorationToCSS(e.textDecoration.value):void 0,textCase:c?o.tokenToVariableRef(c):e.textCase.value===r.TextCase.original?this.textCaseToCSS(e.textCase.value):void 0,caps:e.textCase.value===r.TextCase.smallCaps,fontSize:this.dimensionTokenValueToCSS(e.fontSize,t,o),lineHeight:e.lineHeight?this.dimensionTokenValueToCSS(e.lineHeight,t,o):void 0},p=u.fontSize;return`${u.caps?"small-caps ":""}${s?u.fontWeight:`"${u.fontWeight}"`} ${u.lineHeight?`${p}/${u.lineHeight}`:p} ${i?u.fontFamily:`"${u.fontFamily}"`}`}static borderStyleToCSS(e){switch(e){case r.BorderStyle.dashed:return"dashed";case r.BorderStyle.dotted:return"dotted";case r.BorderStyle.solid:return"solid";case r.BorderStyle.groove:return"groove";default:return"solid"}}static borderPositionToCSS(e){switch(e){case r.BorderPosition.center:return"center";case r.BorderPosition.inside:return"inside";case r.BorderPosition.outside:default:return"outside"}}static unitToCSS(e){switch(e){case r.Unit.percent:return"%";case r.Unit.pixels:return"px";case r.Unit.rem:return"rem";case r.Unit.raw:return"";case r.Unit.ms:return"ms";default:return"px"}}static textCaseToCSS(e){switch(e){case r.TextCase.original:return"none";case r.TextCase.upper:return"uppercase";case r.TextCase.lower:return"lowercase";case r.TextCase.camel:case r.TextCase.smallCaps:return"capitalize"}}static textDecorationToCSS(e){switch(e){case r.TextDecoration.original:return"none";case r.TextDecoration.underline:return"underline";case r.TextDecoration.strikethrough:return"line-through"}}}},952:(e,t,o)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.ColorHelper=void 0;const r=o(989),n=o(761);class a{static formattedColorOrVariableName(e,t,o){let a,i,s;const l=(0,n.sureOptionalReference)(e.referencedTokenId,t,o.allowReferences);if(l)a=o.tokenToVariableRef(l);else{const r=(0,n.sureOptionalReference)(e.color.referencedTokenId,t,o.allowReferences);r&&(i=o.tokenToVariableRef(r));const a=(0,n.sureOptionalReference)(e.opacity.referencedTokenId,t,o.allowReferences);a&&(s=o.tokenToVariableRef(a))}if(a)return a;if(!a&&!i&&!s)return this.formattedColor(e,o.colorFormat,o.decimals);switch(o.colorFormat){case r.ColorFormat.rgb:case r.ColorFormat.rgba:case r.ColorFormat.smartRgba:return this.colorToRgb(o.colorFormat,this.normalizedIntColor(e),e.opacity.measure,o.decimals,i,s);default:return this.formattedColor(e,o.colorFormat,o.decimals)}}static formattedColor(e,t,o=3){switch(t){case r.ColorFormat.hex6:case r.ColorFormat.hex8:case r.ColorFormat.hashHex6:case r.ColorFormat.hashHex8:case r.ColorFormat.smartHex:case r.ColorFormat.smartHashHex:return this.colorToHex(t,this.normalizedIntColor(e),e.opacity.measure);case r.ColorFormat.rgb:case r.ColorFormat.rgba:case r.ColorFormat.smartRgba:return this.colorToRgb(t,this.normalizedIntColor(e),e.opacity.measure,o,null,null);case r.ColorFormat.hsl:case r.ColorFormat.hsla:case r.ColorFormat.smartHsla:return this.colorToHsl(t,this.normalizedFractionalColor(e),e.opacity.measure,o);case r.ColorFormat.smartUIColor:return this.colorToUIColor(this.normalizedIntColor(e),e.opacity.measure,o)}}static colorToRgb(e,t,o,n,a,i){let s;return s=e===r.ColorFormat.rgba||e===r.ColorFormat.smartRgba&&o<1?`rgba(${a||`${t.r}, ${t.g}, ${t.b}`}, ${i||this.roundToDecimals(o,n)})`:`rgb(${a||`${t.r}, ${t.g}, ${t.b}`})`,s}static colorToHex(e,t,o){let n=`${this.pHex(t.r)}${this.pHex(t.g)}${this.pHex(t.b)}`;return(e===r.ColorFormat.hex8||e===r.ColorFormat.hashHex8||e===r.ColorFormat.smartHex&&o<1||e===r.ColorFormat.smartHashHex&&o<1)&&(n+=`${this.pHex(Math.round(255*o))}`),e!==r.ColorFormat.hashHex6&&e!==r.ColorFormat.hashHex8&&e!==r.ColorFormat.smartHashHex||(n=`#${n}`),n}static colorToHsl(e,t,o,n){const a=Math.max(t.r,t.g,t.b),i=Math.min(t.r,t.g,t.b);let s,l,c,u=(a+i)/2;if(a===i)s=l=0;else{const e=a-i;l=u>.5?e/(2-a-i):e/(a+i),a===t.r?s=(t.g-t.b)/e+(t.g<t.b?6:0):a===t.g?s=(t.b-t.r)/e+2:a===t.b&&(s=(t.r-t.g)/e+4),s/=6}return c=e===r.ColorFormat.hsla||e===r.ColorFormat.smartHsla&&o<1?`hsla(${Math.round(360*s)}%, ${Math.round(100*l)}%, ${Math.round(100*u)}%, ${this.roundToDecimals(o,n)})`:`hsl(${Math.round(360*s)}%, ${Math.round(100*l)}%, ${Math.round(100*u)}%)`,c}static colorToUIColor(e,t,o=3){let r=`UIColor(rgb: 0x${this.pHex(e.r)}${this.pHex(e.g)}${this.pHex(e.b)})`;return t<1&&(r+=`.withAlphaComponent(${t})`),r}static normalizedIntColor(e){return{r:Math.round(e.color.r),g:Math.round(e.color.g),b:Math.round(e.color.b)}}static normalizedFractionalColor(e,t=3){return{r:this.roundToDecimals(e.color.r/255,t),g:a.roundToDecimals(e.color.g/255,t),b:a.roundToDecimals(e.color.b/255,t)}}static roundToDecimals(e,t){const o=Math.pow(10,t),r=Math.round(e*o)/o;return parseFloat(r.toFixed(t))}static pHex(e){return e.toString(16).padStart(2,"0")}}t.ColorHelper=a},453:(e,t,o)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.NamingHelper=void 0;const r=o(110),n=o(545);class a{static codeSafeVariableNameForToken(e,t,o,r){let n=[];return o&&(n=[...o.path],o.isRoot||n.push(o.name)),n.push(e.name),r&&r.length>0&&n.unshift(r),a.codeSafeVariableName(n,t)}static codeSafeVariableName(e,t){let o="string"==typeof e?e:e.join(" ");switch(o=o.replaceAll(/[^a-zA-Z0-9_-]/g,"_"),t){case n.StringCase.camelCase:o=(0,r.camelCase)(o);break;case n.StringCase.capitalCase:o=(0,r.capitalCase)(o);break;case n.StringCase.constantCase:o=(0,r.constantCase)(o);break;case n.StringCase.dotCase:o=(0,r.dotCase)(o);break;case n.StringCase.headerCase:o=(0,r.headerCase)(o);break;case n.StringCase.noCase:o=(0,r.noCase)(o);break;case n.StringCase.paramCase:o=(0,r.paramCase)(o);break;case n.StringCase.pascalCase:o=(0,r.pascalCase)(o);break;case n.StringCase.pathCase:o=(0,r.pathCase)(o);break;case n.StringCase.sentenceCase:o=(0,r.sentenceCase)(o);break;case n.StringCase.snakeCase:o=(0,r.snakeCase)(o)}return t!==n.StringCase.snakeCase&&t!==n.StringCase.constantCase&&(o=o.replaceAll("_","")),o.match(/^[^a-zA-Z]/)&&(o="_"+o),o}static nameAsCSSVarReference(e){return`var(--${e})`}static nameAsCSSVarDeclaration(e){return`--${e}`}}t.NamingHelper=a},58:e=>{e.exports=o(/*! @supernovaio/sdk-exporters */"./node_modules/@supernovaio/sdk-exporters/build/supernova-sdk-typescript.js")},110:e=>{e.exports=o(/*! change-case */"./node_modules/change-case/dist.es2015/index.js")}},r={};function n(t){var o=r[t];if(void 0!==o)return o.exports;var a=r[t]={exports:{}};return e[t](a,a.exports,n),a.exports}var a={};(()=>{var e=a;Object.defineProperty(e,"__esModule",{value:!0}),e.ColorFormat=e.StringCase=e.Iterators=e.CSSHelper=e.FileHelper=e.ColorHelper=e.NamingHelper=e.NetworkHelper=void 0;var t=n(118);Object.defineProperty(e,"NetworkHelper",{enumerable:!0,get:function(){return t.NetworkHelper}});var o=n(453);Object.defineProperty(e,"NamingHelper",{enumerable:!0,get:function(){return o.NamingHelper}});var r=n(952);Object.defineProperty(e,"ColorHelper",{enumerable:!0,get:function(){return r.ColorHelper}});var i=n(617);Object.defineProperty(e,"FileHelper",{enumerable:!0,get:function(){return i.FileHelper}});var s=n(771);Object.defineProperty(e,"CSSHelper",{enumerable:!0,get:function(){return s.CSSHelper}});var l=n(639);Object.defineProperty(e,"Iterators",{enumerable:!0,get:function(){return l.Iterators}});var c=n(545);Object.defineProperty(e,"StringCase",{enumerable:!0,get:function(){return c.StringCase}});var u=n(989);Object.defineProperty(e,"ColorFormat",{enumerable:!0,get:function(){return u.ColorFormat}})})();var i=t;for(var s in a)i[s]=a[s];a.__esModule&&Object.defineProperty(i,"__esModule",{value:!0})})()},"./node_modules/@supernovaio/sdk-exporters/build/supernova-sdk-typescript.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@supernovaio/sdk-exporters/build/supernova-sdk-typescript.js ***!
  \***********************************************************************************/(e,t)=>{(()=>{"use strict";var e={275:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.DocsImageRefType=void 0,(o=t.DocsImageRefType||(t.DocsImageRefType={})).upload="Upload",o.asset="Asset",o.figmaFrame="FigmaFrame"},2695:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.DocsLinkRefType=void 0,(o=t.DocsLinkRefType||(t.DocsLinkRefType={})).page="Page",o.pageHeading="pageHeading",o.group="Group",o.url="url"},3476:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.DocumentationLegacyPageBlockShortcut=t.DocumentationLegacyPageBlockShortcutType=void 0,function(e){e.external="External",e.internal="Internal"}(o=t.DocumentationLegacyPageBlockShortcutType||(t.DocumentationLegacyPageBlockShortcutType={})),t.DocumentationLegacyPageBlockShortcut=class{constructor(e){var t;e.url?this.type=o.external:this.type=o.internal,this.title=this.shortcutTitleFromModel(e,this.type),this.description=this.shortcutDescriptionFromModel(e,this.type),this.previewUrl=this.shortcutPreviewUrlFromModel(e),this.type===o.internal&&(null===(t=e.documentationItemPreview)||void 0===t?void 0:t.valid)&&e.documentationItemId?this.internalId=e.documentationItemId:(this.internalId=null,this.type===o.external&&e.url?this.externalUrl=e.url:this.externalUrl=null)}shortcutTitleFromModel(e,t){var r,n,a,i,s;let l=null;return e.title&&e.title.trim().length>0?l=e.title:t===o.internal?l=null!==(n=null===(r=e.documentationItemPreview)||void 0===r?void 0:r.title)&&void 0!==n?n:null:t===o.external&&(l=null!==(s=null!==(i=null===(a=e.urlPreview)||void 0===a?void 0:a.title)&&void 0!==i?i:e.url)&&void 0!==s?s:null),l&&0!==l.trim().length?l:null}shortcutDescriptionFromModel(e,t){var r;let n=null;return e.description&&e.description.trim().length>0?n=e.description:t===o.external&&(n=null===(r=e.urlPreview)||void 0===r?void 0:r.description),n&&0!==n.trim().length?n:null}shortcutPreviewUrlFromModel(e){var t,o,r,n,a;return null!==(a=null!==(r=null!==(t=e.assetUrl)&&void 0!==t?t:null===(o=e.asset)||void 0===o?void 0:o.url)&&void 0!==r?r:null===(n=e.urlPreview)||void 0===n?void 0:n.thumbnailUrl)&&void 0!==a?a:null}}},4222:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.Alignment=void 0,(o=t.Alignment||(t.Alignment={})).left="Left",o.center="Center",o.stretch="Stretch"},1334:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.AssetFormat=void 0,(o=t.AssetFormat||(t.AssetFormat={})).png="png",o.pdf="pdf",o.svg="svg"},1940:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.AssetScale=void 0,(o=t.AssetScale||(t.AssetScale={})).x1="x1",o.x2="x2",o.x3="x3",o.x4="x4"},959:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.AssetScaleType=void 0,(o=t.AssetScaleType||(t.AssetScaleType={})).aspectFill="AspectFill",o.aspectFit="AspectFit"},9257:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.BlurType=void 0,(o=t.BlurType||(t.BlurType={})).layer="Layer",o.background="Background"},6675:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.ALL_BORDER_POSITIONS=t.BorderPosition=void 0,function(e){e.inside="Inside",e.center="Center",e.outside="Outside"}(o=t.BorderPosition||(t.BorderPosition={})),t.ALL_BORDER_POSITIONS=[o.inside,o.center,o.outside]},6701:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.ALL_BORDER_STYLES=t.BorderStyle=void 0,function(e){e.dashed="Dashed",e.dotted="Dotted",e.solid="Solid",e.groove="Groove"}(o=t.BorderStyle||(t.BorderStyle={})),t.ALL_BORDER_STYLES=[o.dashed,o.dotted,o.solid,o.groove]},829:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.ImportWarningType=void 0,(o=t.ImportWarningType||(t.ImportWarningType={})).UnsupportedFill="UnsupportedFill",o.UnsupportedStroke="UnsupportedStroke",o.UnsupportedEffect="UnsupportedEffect",o.StyleNotApplied="StyleNotApplied",o.NoPublishedStyles="NoPublishedStyles",o.NoPublishedComponents="NoPublishedComponents",o.NoPublishedAssets="NoPublishedAssets",o.NoVersionFound="NoVersionFound",o.ComponentHasNoThumbnail="ComponentHasNoThumbnail",o.DuplicateImportedStyleId="DuplicateImportedStyleId",o.DuplicateImportedStylePath="DuplicateImportedStylePath",o.NoPublishedElements="NoPublishedElements"},3611:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.CustomDomainErrorCode=void 0,(o=t.CustomDomainErrorCode||(t.CustomDomainErrorCode={})).generalError="GeneralError",o.dnsNotConfigured="DNSNotConfigured",o.maintenance="Maintenance"},6530:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.CustomDomainState=void 0,(o=t.CustomDomainState||(t.CustomDomainState={})).initial="Initial",o.domainSetupInProgress="DomainSetupInProgress",o.domainSetupFailed="DomainSetupFailed",o.domainSetupsSucces="DomainSetupSuccess",o.sslSetupInProgress="SSLSetupInProgress",o.sslSetupFailed="SSLSetupFailed",o.sslSetupSuccess="SSLSetupSuccess"},4934:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.DocsBlockBehaviorDataType=void 0,(o=t.DocsBlockBehaviorDataType||(t.DocsBlockBehaviorDataType={})).item="Item",o.token="Token",o.asset="Asset",o.component="Component"},8081:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.DocsBlockBehaviorSelectionType=void 0,(o=t.DocsBlockBehaviorSelectionType||(t.DocsBlockBehaviorSelectionType={})).entity="Entity",o.group="Group",o.entityAndGroup="EntityAndGroup"},9534:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.DocsBlockImagePropertyAspectRatio=void 0,(o=t.DocsBlockImagePropertyAspectRatio||(t.DocsBlockImagePropertyAspectRatio={})).square="Square",o.landscape="Landscape",o.portrait="Portrait",o.wide="Wide"},1043:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.DocsBlockItemEntityType=void 0,(o=t.DocsBlockItemEntityType||(t.DocsBlockItemEntityType={})).token="Token",o.tokenGroup="TokenGroup",o.asset="Asset",o.assetGroup="AssetGroup",o.component="Component",o.componentGroup="ComponentGroup"},3947:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.DocsBlockItemPropertyOptionRenderingStyle=void 0,(o=t.DocsBlockItemPropertyOptionRenderingStyle||(t.DocsBlockItemPropertyOptionRenderingStyle={})).segmentedControl="SegmentedControl",o.toggleButton="ToggleButton",o.select="Select",o.checkbox="Checkbox"},4742:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.DocsBlockItemPropertyRichTextStyle=void 0,(o=t.DocsBlockItemPropertyRichTextStyle||(t.DocsBlockItemPropertyRichTextStyle={})).title1="Title1",o.title2="Title2",o.title3="Title3",o.title4="Title4",o.title5="Title5",o.quote="Quote",o.callout="Callout",o.ol="OL",o.ul="UL"},7825:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.DocsBlockItemPropertyTextStyle=void 0,(o=t.DocsBlockItemPropertyTextStyle||(t.DocsBlockItemPropertyTextStyle={})).small="Small",o.regular="Regular",o.bold="Bold"},6751:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.DocsBlockItemPropertyType=void 0,(o=t.DocsBlockItemPropertyType||(t.DocsBlockItemPropertyType={})).richText="RichText",o.text="Text",o.boolean="Boolean",o.number="Number",o.singleSelect="SingleSelect",o.multiSelect="MultiSelect",o.image="Image",o.token="Token",o.tokenType="TokenType",o.tokenProperty="TokenProperty",o.component="Component",o.componentProperty="ComponentProperty",o.asset="Asset",o.assetProperty="AssetProperty",o.page="Page",o.pageProperty="PageProperty",o.embedURL="EmbedURL",o.embedFrame="EmbedFrame",o.markdown="Markdown",o.code="Code",o.codeSandbox="CodeSandbox",o.table="Table",o.divider="Divider",o.storybook="Storybook"},6777:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.DocsBlockItemVariantLayoutType=void 0,(o=t.DocsBlockItemVariantLayoutType||(t.DocsBlockItemVariantLayoutType={})).column="Column",o.row="Row"},9279:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.DocsBlockItemVariantLayoutWidth=void 0,(o=t.DocsBlockItemVariantLayoutWidth||(t.DocsBlockItemVariantLayoutWidth={})).c1="1",o.c2="2",o.c3="3",o.c4="4",o.c5="5",o.c6="6",o.c7="7",o.c8="8",o.c9="9",o.c10="10",o.c11="11",o.c12="12"},5271:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.DocsBlockOptionRenderingStyle=void 0,(o=t.DocsBlockOptionRenderingStyle||(t.DocsBlockOptionRenderingStyle={})).segmentedControl="SegmentedControl",o.toggleButton="ToggleButton",o.select="Select",o.checkbox="Checkbox"},3274:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.DocsBlockRichTextPropertyStyle=void 0,(o=t.DocsBlockRichTextPropertyStyle||(t.DocsBlockRichTextPropertyStyle={})).title1="Title1",o.title2="Title2",o.title3="Title3",o.title4="Title4",o.title5="Title5",o.quote="Quote",o.callout="Callout",o.ol="OL",o.ul="UL",o.default="Default"},6001:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.DocsBlockTextPropertyStyle=void 0,(o=t.DocsBlockTextPropertyStyle||(t.DocsBlockTextPropertyStyle={})).title1="Title1",o.title2="Title2",o.title3="Title3",o.title4="Title4",o.title5="Title5",o.default="Default",o.defaultBold="DefaultBold",o.defaultSemibold="DefaultSemibold",o.small="Small",o.smallBold="SmallBold",o.smallSemibold="SmallSemibold"},1755:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.DocsEntityGroupBehavior=void 0,(o=t.DocsEntityGroupBehavior||(t.DocsEntityGroupBehavior={})).group="Group",o.tabs="Tabs"},8240:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.DocsEntityType=void 0,(o=t.DocsEntityType||(t.DocsEntityType={})).group="Group",o.page="Page"},4142:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.DocsSectionType=void 0,(o=t.DocsSectionType||(t.DocsSectionType={})).plain="Plain",o.tabs="Tabs"},4782:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.DocumentationLegacyCalloutType=void 0,(o=t.DocumentationLegacyCalloutType||(t.DocumentationLegacyCalloutType={})).info="Info",o.success="Success",o.warning="Warning",o.error="Error"},8549:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.DocumentationLegacyGroupBehavior=void 0,(o=t.DocumentationLegacyGroupBehavior||(t.DocumentationLegacyGroupBehavior={})).group="Group",o.tabs="Tabs"},1931:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.DocumentationLegacyHeadingType=void 0,(o=t.DocumentationLegacyHeadingType||(t.DocumentationLegacyHeadingType={}))[o.h1=1]="h1",o[o.h2=2]="h2",o[o.h3=3]="h3"},5359:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.DocumentationLegacyItemType=void 0,(o=t.DocumentationLegacyItemType||(t.DocumentationLegacyItemType={})).group="Group",o.page="Page"},9437:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.DocumentationLegacyPageAssetType=void 0,(o=t.DocumentationLegacyPageAssetType||(t.DocumentationLegacyPageAssetType={})).image="image",o.figmaFrame="figmaFrame"},4649:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.DocumentationLegacyPageBlockThemeType=void 0,(o=t.DocumentationLegacyPageBlockThemeType||(t.DocumentationLegacyPageBlockThemeType={})).override="Override",o.comparison="Comparison"},8560:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.DocumentationLegacyPageBlockType=void 0,(o=t.DocumentationLegacyPageBlockType||(t.DocumentationLegacyPageBlockType={})).text="Text",o.heading="Heading",o.code="Code",o.unorderedList="UnorderedList",o.orderedList="OrderedList",o.quote="Quote",o.callout="Callout",o.divider="Divider",o.image="Image",o.token="Token",o.tokenList="TokenList",o.tokenGroup="TokenGroup",o.shortcuts="Shortcuts",o.link="Link",o.figmaEmbed="FigmaEmbed",o.youtubeEmbed="YoutubeEmbed",o.storybookEmbed="StorybookEmbed",o.genericEmbed="Embed",o.figmaFrames="FigmaFrames",o.custom="Custom",o.renderCode="RenderCode",o.componentAssets="ComponentAssets",o.column="Column",o.columnItem="ColumnItem",o.tabs="Tabs",o.tabItem="TabItem",o.table="Table",o.tableCell="TableCell",o.tableRow="TableRow"},4914:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.FrameAlignment=void 0,(o=t.FrameAlignment||(t.FrameAlignment={})).frameHeight="FrameHeight",o.center="Center"},5986:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.FrameLayout=void 0,(o=t.FrameLayout||(t.FrameLayout={})).c8="C8",o.c7="C7",o.c6="C6",o.c5="C5",o.c4="C4",o.c3="C3",o.c2="C2",o.c1="C1",o.c175="C1_75"},4667:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.GradientType=void 0,(o=t.GradientType||(t.GradientType={})).linear="Linear",o.radial="Radial",o.angular="Angular"},4336:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.RichTextSpanAttributeType=void 0,(o=t.RichTextSpanAttributeType||(t.RichTextSpanAttributeType={})).bold="Bold",o.italic="Italic",o.link="Link",o.strikethrough="Strikethrough",o.code="Code"},5467:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.ShadowType=void 0,(o=t.ShadowType||(t.ShadowType={})).drop="Drop",o.inner="Inner"},1694:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.SourceType=void 0,(o=t.SourceType||(t.SourceType={})).figma="Figma",o.tokenStudio="TokenStudio"},2047:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.TextCase=void 0,(o=t.TextCase||(t.TextCase={})).original="Original",o.upper="Upper",o.lower="Lower",o.camel="Camel",o.smallCaps="SmallCaps"},5780:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.TextDecoration=void 0,(o=t.TextDecoration||(t.TextDecoration={})).original="None",o.underline="Underline",o.strikethrough="Strikethrough"},1256:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.DT_TOKEN_TYPES=t.tokenTypeIsReferencable=t.REFERENCABLE_TOKEN_TYPES=t.REPLACABLE_TOKEN_TYPES=t.tokenTypeIsNonPure=t.tokenTypeIsPure=t.PURE_TOKEN_TYPES=t.ALL_TOKEN_TYPES=t.MS_DIMENSION_TOKEN_TYPES=t.RAW_DIMENSION_TOKEN_TYPES=t.DIMENSION_TOKEN_TYPES=t.OPTION_TOKEN_TYPES=t.STRING_TOKEN_TYPES=t.TokenType=void 0,function(e){e.color="Color",e.typography="Typography",e.dimension="Dimension",e.size="Size",e.space="Space",e.opacity="Opacity",e.fontSize="FontSize",e.lineHeight="LineHeight",e.letterSpacing="LetterSpacing",e.paragraphSpacing="ParagraphSpacing",e.borderWidth="BorderWidth",e.radius="BorderRadius",e.duration="Duration",e.zIndex="ZIndex",e.shadow="Shadow",e.border="Border",e.gradient="Gradient",e.string="String",e.productCopy="ProductCopy",e.fontFamily="FontFamily",e.fontWeight="FontWeight",e.textCase="TextCase",e.textDecoration="TextDecoration",e.visibility="Visibility",e.blur="Blur"}(o=t.TokenType||(t.TokenType={})),t.STRING_TOKEN_TYPES=[o.string,o.productCopy,o.fontFamily,o.fontWeight],t.OPTION_TOKEN_TYPES=[o.textCase,o.textDecoration,o.visibility],t.DIMENSION_TOKEN_TYPES=[o.dimension,o.size,o.space,o.opacity,o.fontSize,o.lineHeight,o.letterSpacing,o.paragraphSpacing,o.borderWidth,o.radius,o.duration,o.zIndex],t.RAW_DIMENSION_TOKEN_TYPES=[o.opacity,o.zIndex],t.MS_DIMENSION_TOKEN_TYPES=[o.duration],t.ALL_TOKEN_TYPES=[...t.DIMENSION_TOKEN_TYPES,...t.STRING_TOKEN_TYPES,...t.OPTION_TOKEN_TYPES,o.color,o.gradient,o.border,o.radius,o.shadow,o.typography,o.blur],t.PURE_TOKEN_TYPES=[...t.DIMENSION_TOKEN_TYPES,...t.STRING_TOKEN_TYPES,...t.OPTION_TOKEN_TYPES],t.tokenTypeIsPure=e=>t.PURE_TOKEN_TYPES.includes(e),t.tokenTypeIsNonPure=e=>!(0,t.tokenTypeIsPure)(e),t.REPLACABLE_TOKEN_TYPES=[o.color,...t.DIMENSION_TOKEN_TYPES,...t.STRING_TOKEN_TYPES,...t.OPTION_TOKEN_TYPES],t.REFERENCABLE_TOKEN_TYPES=[o.color,...t.DIMENSION_TOKEN_TYPES,o.fontFamily,o.fontWeight,o.textCase,o.textDecoration],t.tokenTypeIsReferencable=e=>t.REFERENCABLE_TOKEN_TYPES.includes(e),t.DT_TOKEN_TYPES=[o.color,o.shadow,o.gradient,o.typography,o.border,...t.DIMENSION_TOKEN_TYPES,o.fontFamily,o.fontWeight,...t.OPTION_TOKEN_TYPES]},5389:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.MS_UNITS=t.PX_UNITS=t.RAW_UNITS=t.LINE_HEIGHT_UNITS=t.SIZE_UNITS=t.Unit=void 0,function(e){e.pixels="Pixels",e.percent="Percent",e.rem="Rem",e.ms="Ms",e.raw="Raw"}(o=t.Unit||(t.Unit={})),t.SIZE_UNITS=[o.pixels,o.percent,o.rem],t.LINE_HEIGHT_UNITS=[o.pixels,o.percent,o.rem,o.raw],t.RAW_UNITS=[o.raw],t.PX_UNITS=[o.pixels],t.MS_UNITS=[o.ms]},2916:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.UserRole=void 0,(o=t.UserRole||(t.UserRole={})).owner="Owner",o.admin="Admin",o.creator="Creator",o.viewer="Viewer",o.billing="Billing"},6398:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.VisibilityType=void 0,(o=t.VisibilityType||(t.VisibilityType={})).visible="Visible",o.hidden="Hidden"},4838:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.WorkspaceNPMRegistryAuthType=void 0,(o=t.WorkspaceNPMRegistryAuthType||(t.WorkspaceNPMRegistryAuthType={})).basic="Basic",o.bearer="Bearer"},2015:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.WorkspaceNPMRegistryType=void 0,(o=t.WorkspaceNPMRegistryType||(t.WorkspaceNPMRegistryType={})).npmJS="NPMJS",o.gitHub="GitHub",o.azureDevOps="AzureDevOps",o.artifactory="Artifactory",o.custom="Custom"},4357:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.WorkspaceSubscriptionPlanInterval=void 0,(o=t.WorkspaceSubscriptionPlanInterval||(t.WorkspaceSubscriptionPlanInterval={})).yearly="yearly",o.monthly="monthly"},743:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.WorkspaceSubscriptionProductCode=void 0,(o=t.WorkspaceSubscriptionProductCode||(t.WorkspaceSubscriptionProductCode={})).free="free",o.team="team",o.teamTest="team_test",o.company="company",o.enterprise="enterprise"},5841:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.WorkspaceSubscriptionStatus=void 0,(o=t.WorkspaceSubscriptionStatus||(t.WorkspaceSubscriptionStatus={})).active="active",o.gracePeriod="gracePeriod",o.cancelled="cancelled",o.suspended="suspended"},3803:(e,t)=>{var o,r;Object.defineProperty(t,"__esModule",{value:!0}),t.PulsarExecutor=t.OutputFileType=void 0,(r=t.OutputFileType||(t.OutputFileType={})).copyRemoteUrl="copyRemoteUrl",r.text="text",r.binary="binary",(o=t.PulsarExecutor||(t.PulsarExecutor={})).supernova="supernova",o.local="local"}},o={};function r(t){var n=o[t];if(void 0!==n)return n.exports;var a=o[t]={exports:{}};return e[t](a,a.exports,r),a.exports}var n={};(()=>{var e=n;Object.defineProperty(e,"__esModule",{value:!0}),e.UserRole=e.Unit=e.TokenType=e.TextDecoration=e.TextCase=e.ShadowType=e.RichTextSpanAttributeType=e.GradientType=e.FrameLayout=e.FrameAlignment=e.SourceType=e.DocsImageRefType=e.DocsLinkRefType=e.DocsSectionType=e.DocsEntityType=e.DocsEntityGroupBehavior=e.DocsBlockTextPropertyStyle=e.DocsBlockRichTextPropertyStyle=e.DocsBlockOptionRenderingStyle=e.DocsBlockItemVariantLayoutWidth=e.DocsBlockItemVariantLayoutType=e.DocsBlockItemPropertyType=e.DocsBlockItemPropertyTextStyle=e.DocsBlockItemPropertyRichTextStyle=e.DocsBlockItemPropertyOptionRenderingStyle=e.DocsBlockItemEntityType=e.DocsBlockImagePropertyAspectRatio=e.DocsBlockBehaviorSelectionType=e.DocsBlockBehaviorDataType=e.DocumentationLegacyPageBlockShortcutType=e.DocumentationLegacyPageBlockThemeType=e.DocumentationLegacyPageBlockType=e.DocumentationLegacyPageAssetType=e.DocumentationLegacyItemType=e.DocumentationLegacyHeadingType=e.DocumentationLegacyGroupBehavior=e.DocumentationLegacyCalloutType=e.BorderStyle=e.BorderPosition=e.BlurType=e.AssetScaleType=e.AssetScale=e.AssetFormat=e.Alignment=e.ALL_TOKEN_TYPES=e.ALL_BORDER_STYLES=e.ALL_BORDER_POSITIONS=e.OPTION_TOKEN_TYPES=e.STRING_TOKEN_TYPES=e.DIMENSION_TOKEN_TYPES=void 0,e.PulsarExecutor=e.OutputFileType=e.CustomDomainState=e.CustomDomainErrorCode=e.ImportWarningType=e.WorkspaceNPMRegistryType=e.WorkspaceNPMRegistryAuthType=e.WorkspaceSubscriptionStatus=e.WorkspaceSubscriptionProductCode=e.WorkspaceSubscriptionPlanInterval=e.VisibilityType=void 0;var t=r(1256);Object.defineProperty(e,"DIMENSION_TOKEN_TYPES",{enumerable:!0,get:function(){return t.DIMENSION_TOKEN_TYPES}}),Object.defineProperty(e,"STRING_TOKEN_TYPES",{enumerable:!0,get:function(){return t.STRING_TOKEN_TYPES}}),Object.defineProperty(e,"OPTION_TOKEN_TYPES",{enumerable:!0,get:function(){return t.OPTION_TOKEN_TYPES}});var o=r(6675);Object.defineProperty(e,"ALL_BORDER_POSITIONS",{enumerable:!0,get:function(){return o.ALL_BORDER_POSITIONS}});var a=r(6701);Object.defineProperty(e,"ALL_BORDER_STYLES",{enumerable:!0,get:function(){return a.ALL_BORDER_STYLES}});var i=r(1256);Object.defineProperty(e,"ALL_TOKEN_TYPES",{enumerable:!0,get:function(){return i.ALL_TOKEN_TYPES}});var s=r(4222);Object.defineProperty(e,"Alignment",{enumerable:!0,get:function(){return s.Alignment}});var l=r(1334);Object.defineProperty(e,"AssetFormat",{enumerable:!0,get:function(){return l.AssetFormat}});var c=r(1940);Object.defineProperty(e,"AssetScale",{enumerable:!0,get:function(){return c.AssetScale}});var u=r(959);Object.defineProperty(e,"AssetScaleType",{enumerable:!0,get:function(){return u.AssetScaleType}});var p=r(9257);Object.defineProperty(e,"BlurType",{enumerable:!0,get:function(){return p.BlurType}});var d=r(6675);Object.defineProperty(e,"BorderPosition",{enumerable:!0,get:function(){return d.BorderPosition}});var y=r(6701);Object.defineProperty(e,"BorderStyle",{enumerable:!0,get:function(){return y.BorderStyle}});var m=r(4782);Object.defineProperty(e,"DocumentationLegacyCalloutType",{enumerable:!0,get:function(){return m.DocumentationLegacyCalloutType}});var T=r(8549);Object.defineProperty(e,"DocumentationLegacyGroupBehavior",{enumerable:!0,get:function(){return T.DocumentationLegacyGroupBehavior}});var f=r(1931);Object.defineProperty(e,"DocumentationLegacyHeadingType",{enumerable:!0,get:function(){return f.DocumentationLegacyHeadingType}});var g=r(5359);Object.defineProperty(e,"DocumentationLegacyItemType",{enumerable:!0,get:function(){return g.DocumentationLegacyItemType}});var S=r(9437);Object.defineProperty(e,"DocumentationLegacyPageAssetType",{enumerable:!0,get:function(){return S.DocumentationLegacyPageAssetType}});var b=r(8560);Object.defineProperty(e,"DocumentationLegacyPageBlockType",{enumerable:!0,get:function(){return b.DocumentationLegacyPageBlockType}});var v=r(4649);Object.defineProperty(e,"DocumentationLegacyPageBlockThemeType",{enumerable:!0,get:function(){return v.DocumentationLegacyPageBlockThemeType}});var h=r(3476);Object.defineProperty(e,"DocumentationLegacyPageBlockShortcutType",{enumerable:!0,get:function(){return h.DocumentationLegacyPageBlockShortcutType}});var _=r(4934);Object.defineProperty(e,"DocsBlockBehaviorDataType",{enumerable:!0,get:function(){return _.DocsBlockBehaviorDataType}});var k=r(8081);Object.defineProperty(e,"DocsBlockBehaviorSelectionType",{enumerable:!0,get:function(){return k.DocsBlockBehaviorSelectionType}});var C=r(9534);Object.defineProperty(e,"DocsBlockImagePropertyAspectRatio",{enumerable:!0,get:function(){return C.DocsBlockImagePropertyAspectRatio}});var P=r(1043);Object.defineProperty(e,"DocsBlockItemEntityType",{enumerable:!0,get:function(){return P.DocsBlockItemEntityType}});var O=r(3947);Object.defineProperty(e,"DocsBlockItemPropertyOptionRenderingStyle",{enumerable:!0,get:function(){return O.DocsBlockItemPropertyOptionRenderingStyle}});var x=r(4742);Object.defineProperty(e,"DocsBlockItemPropertyRichTextStyle",{enumerable:!0,get:function(){return x.DocsBlockItemPropertyRichTextStyle}});var D=r(7825);Object.defineProperty(e,"DocsBlockItemPropertyTextStyle",{enumerable:!0,get:function(){return D.DocsBlockItemPropertyTextStyle}});var j=r(6751);Object.defineProperty(e,"DocsBlockItemPropertyType",{enumerable:!0,get:function(){return j.DocsBlockItemPropertyType}});var I=r(6777);Object.defineProperty(e,"DocsBlockItemVariantLayoutType",{enumerable:!0,get:function(){return I.DocsBlockItemVariantLayoutType}});var E=r(9279);Object.defineProperty(e,"DocsBlockItemVariantLayoutWidth",{enumerable:!0,get:function(){return E.DocsBlockItemVariantLayoutWidth}});var w=r(5271);Object.defineProperty(e,"DocsBlockOptionRenderingStyle",{enumerable:!0,get:function(){return w.DocsBlockOptionRenderingStyle}});var R=r(3274);Object.defineProperty(e,"DocsBlockRichTextPropertyStyle",{enumerable:!0,get:function(){return R.DocsBlockRichTextPropertyStyle}});var B=r(6001);Object.defineProperty(e,"DocsBlockTextPropertyStyle",{enumerable:!0,get:function(){return B.DocsBlockTextPropertyStyle}});var N=r(1755);Object.defineProperty(e,"DocsEntityGroupBehavior",{enumerable:!0,get:function(){return N.DocsEntityGroupBehavior}});var F=r(8240);Object.defineProperty(e,"DocsEntityType",{enumerable:!0,get:function(){return F.DocsEntityType}});var L=r(4142);Object.defineProperty(e,"DocsSectionType",{enumerable:!0,get:function(){return L.DocsSectionType}});var M=r(2695);Object.defineProperty(e,"DocsLinkRefType",{enumerable:!0,get:function(){return M.DocsLinkRefType}});var A=r(275);Object.defineProperty(e,"DocsImageRefType",{enumerable:!0,get:function(){return A.DocsImageRefType}});var H=r(1694);Object.defineProperty(e,"SourceType",{enumerable:!0,get:function(){return H.SourceType}});var V=r(4914);Object.defineProperty(e,"FrameAlignment",{enumerable:!0,get:function(){return V.FrameAlignment}});var $=r(5986);Object.defineProperty(e,"FrameLayout",{enumerable:!0,get:function(){return $.FrameLayout}});var U=r(4667);Object.defineProperty(e,"GradientType",{enumerable:!0,get:function(){return U.GradientType}});var W=r(4336);Object.defineProperty(e,"RichTextSpanAttributeType",{enumerable:!0,get:function(){return W.RichTextSpanAttributeType}});var G=r(5467);Object.defineProperty(e,"ShadowType",{enumerable:!0,get:function(){return G.ShadowType}});var Y=r(2047);Object.defineProperty(e,"TextCase",{enumerable:!0,get:function(){return Y.TextCase}});var K=r(5780);Object.defineProperty(e,"TextDecoration",{enumerable:!0,get:function(){return K.TextDecoration}});var z=r(1256);Object.defineProperty(e,"TokenType",{enumerable:!0,get:function(){return z.TokenType}});var Z=r(5389);Object.defineProperty(e,"Unit",{enumerable:!0,get:function(){return Z.Unit}});var J=r(2916);Object.defineProperty(e,"UserRole",{enumerable:!0,get:function(){return J.UserRole}});var q=r(6398);Object.defineProperty(e,"VisibilityType",{enumerable:!0,get:function(){return q.VisibilityType}});var Q=r(4357);Object.defineProperty(e,"WorkspaceSubscriptionPlanInterval",{enumerable:!0,get:function(){return Q.WorkspaceSubscriptionPlanInterval}});var X=r(743);Object.defineProperty(e,"WorkspaceSubscriptionProductCode",{enumerable:!0,get:function(){return X.WorkspaceSubscriptionProductCode}});var ee=r(5841);Object.defineProperty(e,"WorkspaceSubscriptionStatus",{enumerable:!0,get:function(){return ee.WorkspaceSubscriptionStatus}});var te=r(4838);Object.defineProperty(e,"WorkspaceNPMRegistryAuthType",{enumerable:!0,get:function(){return te.WorkspaceNPMRegistryAuthType}});var oe=r(2015);Object.defineProperty(e,"WorkspaceNPMRegistryType",{enumerable:!0,get:function(){return oe.WorkspaceNPMRegistryType}});var re=r(829);Object.defineProperty(e,"ImportWarningType",{enumerable:!0,get:function(){return re.ImportWarningType}});var ne=r(3611);Object.defineProperty(e,"CustomDomainErrorCode",{enumerable:!0,get:function(){return ne.CustomDomainErrorCode}});var ae=r(6530);Object.defineProperty(e,"CustomDomainState",{enumerable:!0,get:function(){return ae.CustomDomainState}});var ie=r(3803);Object.defineProperty(e,"OutputFileType",{enumerable:!0,get:function(){return ie.OutputFileType}}),Object.defineProperty(e,"PulsarExecutor",{enumerable:!0,get:function(){return ie.PulsarExecutor}})})();var a=t;for(var i in n)a[i]=n[i];n.__esModule&&Object.defineProperty(a,"__esModule",{value:!0})})()},"./node_modules/camel-case/dist.es2015/index.js":
/*!******************************************************!*\
  !*** ./node_modules/camel-case/dist.es2015/index.js ***!
  \******************************************************/(e,t,o)=>{"use strict";o.r(t),o.d(t,{camelCase:()=>s,camelCaseTransform:()=>a,camelCaseTransformMerge:()=>i});var r=o(/*! tslib */"./node_modules/tslib/tslib.es6.mjs"),n=o(/*! pascal-case */"./node_modules/pascal-case/dist.es2015/index.js");function a(e,t){return 0===t?e.toLowerCase():(0,n.pascalCaseTransform)(e,t)}function i(e,t){return 0===t?e.toLowerCase():(0,n.pascalCaseTransformMerge)(e)}function s(e,t){return void 0===t&&(t={}),(0,n.pascalCase)(e,(0,r.__assign)({transform:a},t))}},"./node_modules/capital-case/dist.es2015/index.js":
/*!********************************************************!*\
  !*** ./node_modules/capital-case/dist.es2015/index.js ***!
  \********************************************************/(e,t,o)=>{"use strict";o.r(t),o.d(t,{capitalCase:()=>s,capitalCaseTransform:()=>i});var r=o(/*! tslib */"./node_modules/tslib/tslib.es6.mjs"),n=o(/*! no-case */"./node_modules/no-case/dist.es2015/index.js"),a=o(/*! upper-case-first */"./node_modules/upper-case-first/dist.es2015/index.js");function i(e){return(0,a.upperCaseFirst)(e.toLowerCase())}function s(e,t){return void 0===t&&(t={}),(0,n.noCase)(e,(0,r.__assign)({delimiter:" ",transform:i},t))}},"./node_modules/change-case/dist.es2015/index.js":
/*!*******************************************************!*\
  !*** ./node_modules/change-case/dist.es2015/index.js ***!
  \*******************************************************/(e,t,o)=>{"use strict";o.r(t),o.d(t,{camelCase:()=>r.camelCase,camelCaseTransform:()=>r.camelCaseTransform,camelCaseTransformMerge:()=>r.camelCaseTransformMerge,capitalCase:()=>n.capitalCase,capitalCaseTransform:()=>n.capitalCaseTransform,constantCase:()=>a.constantCase,dotCase:()=>i.dotCase,headerCase:()=>s.headerCase,noCase:()=>l.noCase,paramCase:()=>c.paramCase,pascalCase:()=>u.pascalCase,pascalCaseTransform:()=>u.pascalCaseTransform,pascalCaseTransformMerge:()=>u.pascalCaseTransformMerge,pathCase:()=>p.pathCase,sentenceCase:()=>d.sentenceCase,sentenceCaseTransform:()=>d.sentenceCaseTransform,snakeCase:()=>y.snakeCase});var r=o(/*! camel-case */"./node_modules/camel-case/dist.es2015/index.js"),n=o(/*! capital-case */"./node_modules/capital-case/dist.es2015/index.js"),a=o(/*! constant-case */"./node_modules/constant-case/dist.es2015/index.js"),i=o(/*! dot-case */"./node_modules/dot-case/dist.es2015/index.js"),s=o(/*! header-case */"./node_modules/header-case/dist.es2015/index.js"),l=o(/*! no-case */"./node_modules/no-case/dist.es2015/index.js"),c=o(/*! param-case */"./node_modules/param-case/dist.es2015/index.js"),u=o(/*! pascal-case */"./node_modules/pascal-case/dist.es2015/index.js"),p=o(/*! path-case */"./node_modules/path-case/dist.es2015/index.js"),d=o(/*! sentence-case */"./node_modules/sentence-case/dist.es2015/index.js"),y=o(/*! snake-case */"./node_modules/snake-case/dist.es2015/index.js")},"./node_modules/constant-case/dist.es2015/index.js":
/*!*********************************************************!*\
  !*** ./node_modules/constant-case/dist.es2015/index.js ***!
  \*********************************************************/(e,t,o)=>{"use strict";o.r(t),o.d(t,{constantCase:()=>i});var r=o(/*! tslib */"./node_modules/tslib/tslib.es6.mjs"),n=o(/*! no-case */"./node_modules/no-case/dist.es2015/index.js"),a=o(/*! upper-case */"./node_modules/upper-case/dist.es2015/index.js");function i(e,t){return void 0===t&&(t={}),(0,n.noCase)(e,(0,r.__assign)({delimiter:"_",transform:a.upperCase},t))}},"./node_modules/dot-case/dist.es2015/index.js":
/*!****************************************************!*\
  !*** ./node_modules/dot-case/dist.es2015/index.js ***!
  \****************************************************/(e,t,o)=>{"use strict";o.r(t),o.d(t,{dotCase:()=>a});var r=o(/*! tslib */"./node_modules/tslib/tslib.es6.mjs"),n=o(/*! no-case */"./node_modules/no-case/dist.es2015/index.js");function a(e,t){return void 0===t&&(t={}),(0,n.noCase)(e,(0,r.__assign)({delimiter:"."},t))}},"./node_modules/header-case/dist.es2015/index.js":
/*!*******************************************************!*\
  !*** ./node_modules/header-case/dist.es2015/index.js ***!
  \*******************************************************/(e,t,o)=>{"use strict";o.r(t),o.d(t,{headerCase:()=>a});var r=o(/*! tslib */"./node_modules/tslib/tslib.es6.mjs"),n=o(/*! capital-case */"./node_modules/capital-case/dist.es2015/index.js");function a(e,t){return void 0===t&&(t={}),(0,n.capitalCase)(e,(0,r.__assign)({delimiter:"-"},t))}},"./node_modules/lower-case/dist.es2015/index.js":
/*!******************************************************!*\
  !*** ./node_modules/lower-case/dist.es2015/index.js ***!
  \******************************************************/(e,t,o)=>{"use strict";o.r(t),o.d(t,{localeLowerCase:()=>n,lowerCase:()=>a});var r={tr:{regexp:/\u0130|\u0049|\u0049\u0307/g,map:{İ:"i",I:"ı",İ:"i"}},az:{regexp:/\u0130/g,map:{İ:"i",I:"ı",İ:"i"}},lt:{regexp:/\u0049|\u004A|\u012E|\u00CC|\u00CD|\u0128/g,map:{I:"i̇",J:"j̇",Į:"į̇",Ì:"i̇̀",Í:"i̇́",Ĩ:"i̇̃"}}};function n(e,t){var o=r[t.toLowerCase()];return a(o?e.replace(o.regexp,(function(e){return o.map[e]})):e)}function a(e){return e.toLowerCase()}},"./node_modules/no-case/dist.es2015/index.js":
/*!***************************************************!*\
  !*** ./node_modules/no-case/dist.es2015/index.js ***!
  \***************************************************/(e,t,o)=>{"use strict";o.r(t),o.d(t,{noCase:()=>i});var r=o(/*! lower-case */"./node_modules/lower-case/dist.es2015/index.js"),n=[/([a-z0-9])([A-Z])/g,/([A-Z])([A-Z][a-z])/g],a=/[^A-Z0-9]+/gi;function i(e,t){void 0===t&&(t={});for(var o=t.splitRegexp,i=void 0===o?n:o,l=t.stripRegexp,c=void 0===l?a:l,u=t.transform,p=void 0===u?r.lowerCase:u,d=t.delimiter,y=void 0===d?" ":d,m=s(s(e,i,"$1\0$2"),c,"\0"),T=0,f=m.length;"\0"===m.charAt(T);)T++;for(;"\0"===m.charAt(f-1);)f--;return m.slice(T,f).split("\0").map(p).join(y)}function s(e,t,o){return t instanceof RegExp?e.replace(t,o):t.reduce((function(e,t){return e.replace(t,o)}),e)}},"./node_modules/param-case/dist.es2015/index.js":
/*!******************************************************!*\
  !*** ./node_modules/param-case/dist.es2015/index.js ***!
  \******************************************************/(e,t,o)=>{"use strict";o.r(t),o.d(t,{paramCase:()=>a});var r=o(/*! tslib */"./node_modules/tslib/tslib.es6.mjs"),n=o(/*! dot-case */"./node_modules/dot-case/dist.es2015/index.js");function a(e,t){return void 0===t&&(t={}),(0,n.dotCase)(e,(0,r.__assign)({delimiter:"-"},t))}},"./node_modules/pascal-case/dist.es2015/index.js":
/*!*******************************************************!*\
  !*** ./node_modules/pascal-case/dist.es2015/index.js ***!
  \*******************************************************/(e,t,o)=>{"use strict";o.r(t),o.d(t,{pascalCase:()=>s,pascalCaseTransform:()=>a,pascalCaseTransformMerge:()=>i});var r=o(/*! tslib */"./node_modules/tslib/tslib.es6.mjs"),n=o(/*! no-case */"./node_modules/no-case/dist.es2015/index.js");function a(e,t){var o=e.charAt(0),r=e.substr(1).toLowerCase();return t>0&&o>="0"&&o<="9"?"_"+o+r:""+o.toUpperCase()+r}function i(e){return e.charAt(0).toUpperCase()+e.slice(1).toLowerCase()}function s(e,t){return void 0===t&&(t={}),(0,n.noCase)(e,(0,r.__assign)({delimiter:"",transform:a},t))}},"./node_modules/path-case/dist.es2015/index.js":
/*!*****************************************************!*\
  !*** ./node_modules/path-case/dist.es2015/index.js ***!
  \*****************************************************/(e,t,o)=>{"use strict";o.r(t),o.d(t,{pathCase:()=>a});var r=o(/*! tslib */"./node_modules/tslib/tslib.es6.mjs"),n=o(/*! dot-case */"./node_modules/dot-case/dist.es2015/index.js");function a(e,t){return void 0===t&&(t={}),(0,n.dotCase)(e,(0,r.__assign)({delimiter:"/"},t))}},"./node_modules/sentence-case/dist.es2015/index.js":
/*!*********************************************************!*\
  !*** ./node_modules/sentence-case/dist.es2015/index.js ***!
  \*********************************************************/(e,t,o)=>{"use strict";o.r(t),o.d(t,{sentenceCase:()=>s,sentenceCaseTransform:()=>i});var r=o(/*! tslib */"./node_modules/tslib/tslib.es6.mjs"),n=o(/*! no-case */"./node_modules/no-case/dist.es2015/index.js"),a=o(/*! upper-case-first */"./node_modules/upper-case-first/dist.es2015/index.js");function i(e,t){var o=e.toLowerCase();return 0===t?(0,a.upperCaseFirst)(o):o}function s(e,t){return void 0===t&&(t={}),(0,n.noCase)(e,(0,r.__assign)({delimiter:" ",transform:i},t))}},"./node_modules/snake-case/dist.es2015/index.js":
/*!******************************************************!*\
  !*** ./node_modules/snake-case/dist.es2015/index.js ***!
  \******************************************************/(e,t,o)=>{"use strict";o.r(t),o.d(t,{snakeCase:()=>a});var r=o(/*! tslib */"./node_modules/tslib/tslib.es6.mjs"),n=o(/*! dot-case */"./node_modules/dot-case/dist.es2015/index.js");function a(e,t){return void 0===t&&(t={}),(0,n.dotCase)(e,(0,r.__assign)({delimiter:"_"},t))}},"./src/configs/figma-colletion-types.ts":
/*!**********************************************!*\
  !*** ./src/configs/figma-colletion-types.ts ***!
  \**********************************************/(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.figmaFluidHeadlineIdentifier=t.figmaFluidTypographyScreenMinTokenName=t.figmaFluidTypographyScreenMaxTokenName=t.figmaComponentCollectionTypes=t.figmaSemanticCollectionTypes=void 0,t.figmaSemanticCollectionTypes=["💯 Number tokens","Semantic colors","Semantic tokens","Typography"],t.figmaComponentCollectionTypes=["Components"],t.figmaFluidTypographyScreenMaxTokenName="Fluid/Screen Max",t.figmaFluidTypographyScreenMinTokenName="Fluid/Screen Min",t.figmaFluidHeadlineIdentifier="Heading"},"./src/content/token.ts":
/*!******************************!*\
  !*** ./src/content/token.ts ***!
  \******************************/(e,t,o)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.colorTokenToCSS=function(e,t,o,a=null){const i=n(e,o,a),s=r.CSSHelper.colorTokenValueToCSS(e.value,t,{allowReferences:!1,decimals:3,colorFormat:r.ColorFormat.smartHashHex,tokenToVariableRef:e=>`var(--${n(e,o)})`});return`  --${i}: ${s};`},t.dimensioinTokenToCSS=function(e,t,o,a=null){const i=n(e,o,a),s=r.CSSHelper.dimensionTokenValueToCSS(e.value,t,{allowReferences:!1,decimals:3,colorFormat:r.ColorFormat.smartHashHex,tokenToVariableRef:e=>`var(--${n(e,o)})`});return`  --${i}: ${s};`},t.gradientTokenToCSS=function(e,t,o,a=null){const i=n(e,o,a),s=r.CSSHelper.gradientTokenValueToCSS(e.value,t,{allowReferences:!1,decimals:3,colorFormat:r.ColorFormat.smartHashHex,tokenToVariableRef:e=>`var(--${n(e,o)})`});return`  --${i}: ${s};`},t.shadowTokenToCSS=function(e,t,o,a=null){const i=n(e,o,a),s=r.CSSHelper.shadowTokenValueToCSS(e.value,t,{allowReferences:!1,decimals:3,colorFormat:r.ColorFormat.hashHex8,tokenToVariableRef:e=>`var(--${n(e,o)})`});return`  --${i}: ${s};`},t.blurTokenToCSS=function(e,t,o,a=null){const i=n(e,o,a),s=r.CSSHelper.blurTokenValueToCSS(e.value,t,{allowReferences:!1,decimals:3,colorFormat:r.ColorFormat.hashHex8,tokenToVariableRef:e=>`var(--${n(e,o)})`});return`  --${i}: ${s};`},t.typographyTokenToCSS=function(e,t,o,a=null){const i=n(e,o,a);console.log(JSON.stringify(e.value),JSON.stringify(t));const s=r.CSSHelper.typographyTokenValueToCSS(e.value,t,{allowReferences:!1,decimals:3,colorFormat:r.ColorFormat.smartHashHex,tokenToVariableRef:e=>`var(--${n(e,o)})`});return`  --${i}: ${s};`};const r=o(/*! @supernovaio/export-helpers */"./node_modules/@supernovaio/export-helpers/build/helpers.js");function n(e,t,o=null){const n=t.find((t=>t.id===e.parentGroupId));return r.NamingHelper.codeSafeVariableNameForToken(e,r.StringCase.paramCase,n,o)}},"./src/index.ts":
/*!**********************!*\
  !*** ./src/index.ts ***!
  \**********************/(e,t,o)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.exportConfiguration=void 0;const r=o(/*! @supernovaio/export-helpers */"./node_modules/@supernovaio/export-helpers/build/helpers.js"),n=o(/*! @supernovaio/sdk-exporters */"./node_modules/@supernovaio/sdk-exporters/build/supernova-sdk-typescript.js"),a=o(/*! ./content/token */"./src/content/token.ts"),i=o(/*! ./utils/utils */"./src/utils/utils.ts"),s=o(/*! ./configs/figma-colletion-types */"./src/configs/figma-colletion-types.ts");Pulsar.export((async(e,o)=>{const l={designSystemId:o.dsId,versionId:o.versionId};let c=await e.tokens.getTokens(l),u=await e.tokens.getTokenGroups(l);if(o.brandId&&(c=c.filter((e=>e.properties&&e.brandId===o.brandId)),u=u.filter((e=>e.brandId===o.brandId))),o.themeId){const t=(await e.tokens.getTokenThemes(l)).find((e=>e.id===o.themeId));if(!t)throw new Error("Unable to apply theme which doesn't exist in the system.");c=await e.tokens.computeTokensByApplyingThemes(c,[t])}let p="",d="",y="";const m=new Map(c.map((e=>[e.id,e]))),T=c.filter((e=>e.tokenType===n.TokenType.color)).filter((e=>(0,i.isTokenSemantic)(e))).map((e=>(0,a.colorTokenToCSS)(e,m,u,"color"))).join("\n"),f=c.filter((e=>e.tokenType===n.TokenType.color)).filter((e=>(0,i.isTokenComponent)(e))).map((e=>(0,a.colorTokenToCSS)(e,m,u))).join("\n"),g=c.filter((e=>e.tokenType===n.TokenType.dimension)).filter((e=>(0,i.isTokenSemantic)(e))).sort(((e,t)=>e.name.localeCompare(t.name))).map((e=>(0,a.dimensioinTokenToCSS)(e,m,u))).join("\n"),S=c.filter((e=>e.tokenType===n.TokenType.dimension)).filter((e=>(0,i.isTokenComponent)(e))).map((e=>(0,a.dimensioinTokenToCSS)(e,m,u))).join("\n"),b=c.filter((e=>e.tokenType===n.TokenType.gradient)).map((e=>(0,a.gradientTokenToCSS)(e,m,u))).join("\n"),v=c.filter((e=>e.tokenType===n.TokenType.shadow)).map((e=>(0,a.shadowTokenToCSS)(e,m,u))).join("\n"),h=c.filter((e=>e.tokenType===n.TokenType.blur)).map((e=>(0,a.blurTokenToCSS)(e,m,u))).join("\n");console.log("Fluid Screen Size Max");const _=c.filter((e=>e.tokenType===n.TokenType.dimension&&e.origin?.name?.includes(s.figmaFluidTypographyScreenMaxTokenName))).map((e=>e.value.measure))?.[0];console.log(_),console.log("Fluid Screen Size Min");const k=c.filter((e=>e.tokenType===n.TokenType.dimension&&e.origin?.name?.includes(s.figmaFluidTypographyScreenMinTokenName))).map((e=>e.value.measure))?.[0];console.log(k),console.log("Typography Fluid Size");const C=[];let P={};if(c.filter((e=>e.tokenType===n.TokenType.dimension&&e.origin?.name?.includes(s.figmaFluidHeadlineIdentifier))).forEach((e=>{const t=(u.find((t=>t.id===e.parentGroupId))?.name)?.replaceAll(" ","-").toLocaleLowerCase();t&&("Max Size"===e.name&&(P[t]={max:e.value.measure}),"Min Size"===e.name&&(P[t]={...P[t],min:e.value.measure},C.push(P),P={}))})),console.log(C),t.exportConfiguration.generateDisclaimer){const e="/* This file was generated by Supernova, don't change by hand */\n";p+=e,d+=e,y+=e}return p+=`:root {\n${T}\n${g}\n${b}\n${v}\n${h}\n}`,d+=`:root {\n${f}\n${S}\n}`,[r.FileHelper.createTextFile({relativePath:"./",fileName:"semantics.css",content:p}),r.FileHelper.createTextFile({relativePath:"./",fileName:"components.css",content:d})]})),t.exportConfiguration=Pulsar.exportConfig()},"./src/utils/utils.ts":
/*!****************************!*\
  !*** ./src/utils/utils.ts ***!
  \****************************/(e,t,o)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.isTokenSemantic=function(e){const t=Boolean(e.propertyValues.tokensSet),o=Boolean(e.propertyValues.Collection);if(t)return"token-set-semantic"===e.propertyValues.tokensSet;if(o)return function(e,t){const o=a(t);if(!o)return!1;const i=n(o.options,e.toString());if(!i)return!1;return r.figmaSemanticCollectionTypes.includes(i.name)}(e.propertyValues.Collection,e.properties);return!1},t.isTokenComponent=function(e){const t=Boolean(e.propertyValues.tokensSet),o=Boolean(e.propertyValues.Collection);if(t)return"token-set-component"===e.propertyValues.tokensSet;if(o)return function(e,t){const o=a(t);if(!o)return!1;const i=n(o.options,e.toString());if(!i)return!1;return r.figmaComponentCollectionTypes.includes(i.name)}(e.propertyValues.Collection,e.properties);return!1};const r=o(/*! ../configs/figma-colletion-types */"./src/configs/figma-colletion-types.ts");function n(e,t){return(e?e.find((e=>e.id===t)):null)||null}function a(e){return e.find((e=>"Collection"===e.codeName))}},"./node_modules/upper-case-first/dist.es2015/index.js":
/*!************************************************************!*\
  !*** ./node_modules/upper-case-first/dist.es2015/index.js ***!
  \************************************************************/(e,t,o)=>{"use strict";function r(e){return e.charAt(0).toUpperCase()+e.substr(1)}o.r(t),o.d(t,{upperCaseFirst:()=>r})},"./node_modules/upper-case/dist.es2015/index.js":
/*!******************************************************!*\
  !*** ./node_modules/upper-case/dist.es2015/index.js ***!
  \******************************************************/(e,t,o)=>{"use strict";o.r(t),o.d(t,{localeUpperCase:()=>n,upperCase:()=>a});var r={tr:{regexp:/[\u0069]/g,map:{i:"İ"}},az:{regexp:/[\u0069]/g,map:{i:"İ"}},lt:{regexp:/[\u0069\u006A\u012F]\u0307|\u0069\u0307[\u0300\u0301\u0303]/g,map:{i̇:"I",j̇:"J",į̇:"Į",i̇̀:"Ì",i̇́:"Í",i̇̃:"Ĩ"}}};function n(e,t){var o=r[t.toLowerCase()];return a(o?e.replace(o.regexp,(function(e){return o.map[e]})):e)}function a(e){return e.toUpperCase()}},"./node_modules/tslib/tslib.es6.mjs":
/*!******************************************!*\
  !*** ./node_modules/tslib/tslib.es6.mjs ***!
  \******************************************/(e,t,o)=>{"use strict";o.r(t),o.d(t,{__addDisposableResource:()=>B,__assign:()=>a,__asyncDelegator:()=>P,__asyncGenerator:()=>C,__asyncValues:()=>O,__await:()=>k,__awaiter:()=>m,__classPrivateFieldGet:()=>E,__classPrivateFieldIn:()=>R,__classPrivateFieldSet:()=>w,__createBinding:()=>f,__decorate:()=>s,__disposeResources:()=>F,__esDecorate:()=>c,__exportStar:()=>g,__extends:()=>n,__generator:()=>T,__importDefault:()=>I,__importStar:()=>j,__makeTemplateObject:()=>x,__metadata:()=>y,__param:()=>l,__propKey:()=>p,__read:()=>b,__rest:()=>i,__runInitializers:()=>u,__setFunctionName:()=>d,__spread:()=>v,__spreadArray:()=>_,__spreadArrays:()=>h,__values:()=>S,default:()=>L});var r=function(e,t){return r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var o in t)Object.prototype.hasOwnProperty.call(t,o)&&(e[o]=t[o])},r(e,t)};function n(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Class extends value "+String(t)+" is not a constructor or null");function o(){this.constructor=e}r(e,t),e.prototype=null===t?Object.create(t):(o.prototype=t.prototype,new o)}var a=function(){return a=Object.assign||function(e){for(var t,o=1,r=arguments.length;o<r;o++)for(var n in t=arguments[o])Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n]);return e},a.apply(this,arguments)};function i(e,t){var o={};for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&t.indexOf(r)<0&&(o[r]=e[r]);if(null!=e&&"function"==typeof Object.getOwnPropertySymbols){var n=0;for(r=Object.getOwnPropertySymbols(e);n<r.length;n++)t.indexOf(r[n])<0&&Object.prototype.propertyIsEnumerable.call(e,r[n])&&(o[r[n]]=e[r[n]])}return o}function s(e,t,o,r){var n,a=arguments.length,i=a<3?t:null===r?r=Object.getOwnPropertyDescriptor(t,o):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,o,r);else for(var s=e.length-1;s>=0;s--)(n=e[s])&&(i=(a<3?n(i):a>3?n(t,o,i):n(t,o))||i);return a>3&&i&&Object.defineProperty(t,o,i),i}function l(e,t){return function(o,r){t(o,r,e)}}function c(e,t,o,r,n,a){function i(e){if(void 0!==e&&"function"!=typeof e)throw new TypeError("Function expected");return e}for(var s,l=r.kind,c="getter"===l?"get":"setter"===l?"set":"value",u=!t&&e?r.static?e:e.prototype:null,p=t||(u?Object.getOwnPropertyDescriptor(u,r.name):{}),d=!1,y=o.length-1;y>=0;y--){var m={};for(var T in r)m[T]="access"===T?{}:r[T];for(var T in r.access)m.access[T]=r.access[T];m.addInitializer=function(e){if(d)throw new TypeError("Cannot add initializers after decoration has completed");a.push(i(e||null))};var f=(0,o[y])("accessor"===l?{get:p.get,set:p.set}:p[c],m);if("accessor"===l){if(void 0===f)continue;if(null===f||"object"!=typeof f)throw new TypeError("Object expected");(s=i(f.get))&&(p.get=s),(s=i(f.set))&&(p.set=s),(s=i(f.init))&&n.unshift(s)}else(s=i(f))&&("field"===l?n.unshift(s):p[c]=s)}u&&Object.defineProperty(u,r.name,p),d=!0}function u(e,t,o){for(var r=arguments.length>2,n=0;n<t.length;n++)o=r?t[n].call(e,o):t[n].call(e);return r?o:void 0}function p(e){return"symbol"==typeof e?e:"".concat(e)}function d(e,t,o){return"symbol"==typeof t&&(t=t.description?"[".concat(t.description,"]"):""),Object.defineProperty(e,"name",{configurable:!0,value:o?"".concat(o," ",t):t})}function y(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)}function m(e,t,o,r){return new(o||(o=Promise))((function(n,a){function i(e){try{l(r.next(e))}catch(e){a(e)}}function s(e){try{l(r.throw(e))}catch(e){a(e)}}function l(e){var t;e.done?n(e.value):(t=e.value,t instanceof o?t:new o((function(e){e(t)}))).then(i,s)}l((r=r.apply(e,t||[])).next())}))}function T(e,t){var o,r,n,a,i={label:0,sent:function(){if(1&n[0])throw n[1];return n[1]},trys:[],ops:[]};return a={next:s(0),throw:s(1),return:s(2)},"function"==typeof Symbol&&(a[Symbol.iterator]=function(){return this}),a;function s(s){return function(l){return function(s){if(o)throw new TypeError("Generator is already executing.");for(;a&&(a=0,s[0]&&(i=0)),i;)try{if(o=1,r&&(n=2&s[0]?r.return:s[0]?r.throw||((n=r.return)&&n.call(r),0):r.next)&&!(n=n.call(r,s[1])).done)return n;switch(r=0,n&&(s=[2&s[0],n.value]),s[0]){case 0:case 1:n=s;break;case 4:return i.label++,{value:s[1],done:!1};case 5:i.label++,r=s[1],s=[0];continue;case 7:s=i.ops.pop(),i.trys.pop();continue;default:if(!(n=i.trys,(n=n.length>0&&n[n.length-1])||6!==s[0]&&2!==s[0])){i=0;continue}if(3===s[0]&&(!n||s[1]>n[0]&&s[1]<n[3])){i.label=s[1];break}if(6===s[0]&&i.label<n[1]){i.label=n[1],n=s;break}if(n&&i.label<n[2]){i.label=n[2],i.ops.push(s);break}n[2]&&i.ops.pop(),i.trys.pop();continue}s=t.call(e,i)}catch(e){s=[6,e],r=0}finally{o=n=0}if(5&s[0])throw s[1];return{value:s[0]?s[1]:void 0,done:!0}}([s,l])}}}var f=Object.create?function(e,t,o,r){void 0===r&&(r=o);var n=Object.getOwnPropertyDescriptor(t,o);n&&!("get"in n?!t.__esModule:n.writable||n.configurable)||(n={enumerable:!0,get:function(){return t[o]}}),Object.defineProperty(e,r,n)}:function(e,t,o,r){void 0===r&&(r=o),e[r]=t[o]};function g(e,t){for(var o in e)"default"===o||Object.prototype.hasOwnProperty.call(t,o)||f(t,e,o)}function S(e){var t="function"==typeof Symbol&&Symbol.iterator,o=t&&e[t],r=0;if(o)return o.call(e);if(e&&"number"==typeof e.length)return{next:function(){return e&&r>=e.length&&(e=void 0),{value:e&&e[r++],done:!e}}};throw new TypeError(t?"Object is not iterable.":"Symbol.iterator is not defined.")}function b(e,t){var o="function"==typeof Symbol&&e[Symbol.iterator];if(!o)return e;var r,n,a=o.call(e),i=[];try{for(;(void 0===t||t-- >0)&&!(r=a.next()).done;)i.push(r.value)}catch(e){n={error:e}}finally{try{r&&!r.done&&(o=a.return)&&o.call(a)}finally{if(n)throw n.error}}return i}function v(){for(var e=[],t=0;t<arguments.length;t++)e=e.concat(b(arguments[t]));return e}function h(){for(var e=0,t=0,o=arguments.length;t<o;t++)e+=arguments[t].length;var r=Array(e),n=0;for(t=0;t<o;t++)for(var a=arguments[t],i=0,s=a.length;i<s;i++,n++)r[n]=a[i];return r}function _(e,t,o){if(o||2===arguments.length)for(var r,n=0,a=t.length;n<a;n++)!r&&n in t||(r||(r=Array.prototype.slice.call(t,0,n)),r[n]=t[n]);return e.concat(r||Array.prototype.slice.call(t))}function k(e){return this instanceof k?(this.v=e,this):new k(e)}function C(e,t,o){if(!Symbol.asyncIterator)throw new TypeError("Symbol.asyncIterator is not defined.");var r,n=o.apply(e,t||[]),a=[];return r={},i("next"),i("throw"),i("return",(function(e){return function(t){return Promise.resolve(t).then(e,c)}})),r[Symbol.asyncIterator]=function(){return this},r;function i(e,t){n[e]&&(r[e]=function(t){return new Promise((function(o,r){a.push([e,t,o,r])>1||s(e,t)}))},t&&(r[e]=t(r[e])))}function s(e,t){try{(o=n[e](t)).value instanceof k?Promise.resolve(o.value.v).then(l,c):u(a[0][2],o)}catch(e){u(a[0][3],e)}var o}function l(e){s("next",e)}function c(e){s("throw",e)}function u(e,t){e(t),a.shift(),a.length&&s(a[0][0],a[0][1])}}function P(e){var t,o;return t={},r("next"),r("throw",(function(e){throw e})),r("return"),t[Symbol.iterator]=function(){return this},t;function r(r,n){t[r]=e[r]?function(t){return(o=!o)?{value:k(e[r](t)),done:!1}:n?n(t):t}:n}}function O(e){if(!Symbol.asyncIterator)throw new TypeError("Symbol.asyncIterator is not defined.");var t,o=e[Symbol.asyncIterator];return o?o.call(e):(e=S(e),t={},r("next"),r("throw"),r("return"),t[Symbol.asyncIterator]=function(){return this},t);function r(o){t[o]=e[o]&&function(t){return new Promise((function(r,n){(function(e,t,o,r){Promise.resolve(r).then((function(t){e({value:t,done:o})}),t)})(r,n,(t=e[o](t)).done,t.value)}))}}}function x(e,t){return Object.defineProperty?Object.defineProperty(e,"raw",{value:t}):e.raw=t,e}var D=Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t};function j(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var o in e)"default"!==o&&Object.prototype.hasOwnProperty.call(e,o)&&f(t,e,o);return D(t,e),t}function I(e){return e&&e.__esModule?e:{default:e}}function E(e,t,o,r){if("a"===o&&!r)throw new TypeError("Private accessor was defined without a getter");if("function"==typeof t?e!==t||!r:!t.has(e))throw new TypeError("Cannot read private member from an object whose class did not declare it");return"m"===o?r:"a"===o?r.call(e):r?r.value:t.get(e)}function w(e,t,o,r,n){if("m"===r)throw new TypeError("Private method is not writable");if("a"===r&&!n)throw new TypeError("Private accessor was defined without a setter");if("function"==typeof t?e!==t||!n:!t.has(e))throw new TypeError("Cannot write private member to an object whose class did not declare it");return"a"===r?n.call(e,o):n?n.value=o:t.set(e,o),o}function R(e,t){if(null===t||"object"!=typeof t&&"function"!=typeof t)throw new TypeError("Cannot use 'in' operator on non-object");return"function"==typeof e?t===e:e.has(t)}function B(e,t,o){if(null!=t){if("object"!=typeof t&&"function"!=typeof t)throw new TypeError("Object expected.");var r,n;if(o){if(!Symbol.asyncDispose)throw new TypeError("Symbol.asyncDispose is not defined.");r=t[Symbol.asyncDispose]}if(void 0===r){if(!Symbol.dispose)throw new TypeError("Symbol.dispose is not defined.");r=t[Symbol.dispose],o&&(n=r)}if("function"!=typeof r)throw new TypeError("Object not disposable.");n&&(r=function(){try{n.call(this)}catch(e){return Promise.reject(e)}}),e.stack.push({value:t,dispose:r,async:o})}else o&&e.stack.push({async:!0});return t}var N="function"==typeof SuppressedError?SuppressedError:function(e,t,o){var r=new Error(o);return r.name="SuppressedError",r.error=e,r.suppressed=t,r};function F(e){function t(t){e.error=e.hasError?new N(t,e.error,"An error was suppressed during disposal."):t,e.hasError=!0}return function o(){for(;e.stack.length;){var r=e.stack.pop();try{var n=r.dispose&&r.dispose.call(r.value);if(r.async)return Promise.resolve(n).then(o,(function(e){return t(e),o()}))}catch(e){t(e)}}if(e.hasError)throw e.error}()}const L={__extends:n,__assign:a,__rest:i,__decorate:s,__param:l,__metadata:y,__awaiter:m,__generator:T,__createBinding:f,__exportStar:g,__values:S,__read:b,__spread:v,__spreadArrays:h,__spreadArray:_,__await:k,__asyncGenerator:C,__asyncDelegator:P,__asyncValues:O,__makeTemplateObject:x,__importStar:j,__importDefault:I,__classPrivateFieldGet:E,__classPrivateFieldSet:w,__classPrivateFieldIn:R,__addDisposableResource:B,__disposeResources:F}}},t={};function o(r){var n=t[r];if(void 0!==n)return n.exports;var a=t[r]={exports:{}};return e[r](a,a.exports,o),a.exports}o.d=(e,t)=>{for(var r in t)o.o(t,r)&&!o.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:t[r]})},o.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),o.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})};o("./src/index.ts")})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,